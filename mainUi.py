# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui\default.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QFont, QFontDatabase


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1100, 629)
        MainWindow.setMinimumSize(QtCore.QSize(1100, 600))
        MainWindow.setStyleSheet("background-color:rgb(17, 17, 17);")

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.Video_Space = QtWidgets.QVBoxLayout()
        self.Video_Space.setObjectName("Video_Space")
        self.Video_Title = QtWidgets.QLabel(self.centralwidget)
        self.Video_Title.setStyleSheet("color: rgb(255, 255, 255);")
        self.Video_Title.setObjectName("Video_Title")
        self.Video_Space.addWidget(self.Video_Title)
        self.Video = QtWidgets.QGraphicsView(self.centralwidget)
        self.Video.setStyleSheet("background-color: rgb(213, 213, 213);\n"
"border-radius: 8px;")
        self.Video.setObjectName("Video")
        self.Video_Space.addWidget(self.Video)
        self.horizontalLayout.addLayout(self.Video_Space)
        self.Options_Space = QtWidgets.QVBoxLayout()
        self.Options_Space.setObjectName("Options_Space")
        self.Input_Title = QtWidgets.QLabel(self.centralwidget)
        self.Input_Title.setStyleSheet("color: rgb(255, 255, 255);")
        self.Input_Title.setObjectName("Input_Title")
        self.Options_Space.addWidget(self.Input_Title)
        self.Input_Combo = QtWidgets.QComboBox(self.centralwidget)
        self.Input_Combo.setStyleSheet("color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"border: 1px solid #444;\n"
"background-color: #202020;")
        self.Input_Combo.setObjectName("Input_Combo")
        self.Input_Combo.addItem("")
        self.Input_Combo.addItem("")
        self.Options_Space.addWidget(self.Input_Combo)
        self.Move_Title = QtWidgets.QLabel(self.centralwidget)
        self.Move_Title.setStyleSheet("color: rgb(255, 255, 255);")
        self.Move_Title.setObjectName("Move_Title")
        self.Options_Space.addWidget(self.Move_Title)
        self.Move_Slider = QtWidgets.QSlider(self.centralwidget)
        self.Move_Slider.setMinimum(1)
        self.Move_Slider.setMaximum(100)
        self.Move_Slider.setOrientation(QtCore.Qt.Horizontal)
        self.Move_Slider.setInvertedAppearance(False)
        self.Move_Slider.setInvertedControls(False)
        self.Move_Slider.setObjectName("Move_Slider")
        self.Move_Slider.valueChanged.connect(self.updateMove_Title)
        self.Options_Space.addWidget(self.Move_Slider)
        self.Gesture_Title = QtWidgets.QLabel(self.centralwidget)
        self.Gesture_Title.setStyleSheet("color: rgb(255, 255, 255);")
        self.Gesture_Title.setObjectName("Gesture_Title")
        self.Options_Space.addWidget(self.Gesture_Title)
        self.Gesture_Slider = QtWidgets.QComboBox(self.centralwidget)
        self.Gesture_Slider.setStyleSheet("color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"border: 1px solid #444;\n"
"background-color: #202020;")
        self.Gesture_Slider.setObjectName("Gesture_Slider")
        self.Gesture_Slider.addItem("")
        self.Gesture_Slider.addItem("")
        self.Gesture_Slider.addItem("")
        self.Options_Space.addWidget(self.Gesture_Slider)
        self.Action_Title = QtWidgets.QLabel(self.centralwidget)
        self.Action_Title.setStyleSheet("color: rgb(255, 255, 255);")
        self.Action_Title.setObjectName("Action_Title")
        self.Options_Space.addWidget(self.Action_Title)
        self.Action_Key = QtWidgets.QKeySequenceEdit(self.centralwidget)
        self.Action_Key.setStyleSheet("color: rgb(255, 255, 255);\n"
"border-radius: 5px;\n"
"border: 1px solid #444;\n"
"background-color: #202020;")
        self.Action_Key.setKeySequence("")
        self.Action_Key.setObjectName("Action_Key")
        self.Action_Key.keySequenceChanged.connect(self.limitKeySequence)
        self.Options_Space.addWidget(self.Action_Key)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.Options_Space.addItem(spacerItem)
        self.Apply_Btn = QtWidgets.QPushButton(self.centralwidget)
        self.Apply_Btn.setStyleSheet("color: #ffffff;\n"
"border-radius: 8px;\n"
"border: 1px solid #ffffff;")
        self.Apply_Btn.setCheckable(False)
        self.Apply_Btn.setAutoDefault(False)
        self.Apply_Btn.setDefault(False)
        self.Apply_Btn.setFlat(False)
        self.Apply_Btn.setObjectName("Apply_Btn")
        self.Apply_Btn.setMinimumHeight(72)
        self.Options_Space.addWidget(self.Apply_Btn)
        self.horizontalLayout.addLayout(self.Options_Space)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1100, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HandPresentation"))
        self.Video_Title.setText(_translate("MainWindow", "Video Source"))
        self.Input_Title.setText(_translate("MainWindow", "Input Type"))
        self.Input_Combo.setItemText(0, _translate("MainWindow", "Movement"))
        self.Input_Combo.setItemText(1, _translate("MainWindow", "Gesture"))
        self.Move_Title.setText(_translate("MainWindow", "Movement Value - 1"))
        self.Gesture_Title.setText(_translate("MainWindow", "Gesture Type"))
        self.Gesture_Slider.setItemText(0, _translate("MainWindow", "Rock"))
        self.Gesture_Slider.setItemText(1, _translate("MainWindow", "Scissor"))
        self.Gesture_Slider.setItemText(2, _translate("MainWindow", "Paper"))
        self.Action_Title.setText(_translate("MainWindow", "Action Key"))
        self.Apply_Btn.setText(_translate("MainWindow", "Apply"))

    # Move_Slider의 값에 따라 Move_Title 변경 함수
    def updateMove_Title(self, value):
        self.Move_Title.setText(f"Movement Value - {value}")

    def limitKeySequence(self, key_sequence):
        if len(key_sequence.toString()) > 2:  # 허용된 최대 키 개수 이상 입력된 경우
            keys = key_sequence.toString().split(', ')[:2]  # 쉼표로 구분된 키들을 가져옴 (최대 2개)
            new_sequence = ', '.join(keys)  # 최대 2개의 키로 조합된 새로운 시퀀스 생성
            self.Action_Key.setKeySequence(new_sequence) # 새로운 시퀀스로 설정

            print(str(new_sequence))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)

    # Pretendard Variable 폰트 적용
    fontDB = QFontDatabase()
    fontDB.addApplicationFont('./font/PretendardVariable.ttf')
    app.setFont(QFont('Pretendard'))

    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
